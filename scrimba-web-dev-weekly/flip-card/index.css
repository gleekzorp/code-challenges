*,
*:before,
*:after {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  padding: 0;
}

/*
DESCRIPTION:

You challenge is to create a responsive flip card. 
The user should be able to hover or click on the card 
and it needs to flip on the other side to reveal what's on the back. 

Remember: the card needs to be responsive - as I change the size of my window, 
the card needs to adjust to the new size and look natural. 

transform-style, transform, transition, 
perspective, pseudo-classes, cursor, 
min- max- prefixes, ems and rems, 
*/

/* Write your code here ðŸ‘‡ */

/*

DETAILED INSTRUCTIONS
1. Choose the required pseudo-class
2. Figure out how to flip a card on the required event
3. Make it responsive!

*/

/* https://www.w3schools.com/howto/howto_css_flip_card.asp */
body {
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  flex-direction: column;
  height: 100vh;
  background-image: url("./question-background.png");
  background-size: cover;
  background-position: center;
  font-family: 'Montserrat', sans-serif;
  font-weight: 700;
}

.title {
  font-size: 2rem;
  text-align: center;
  text-shadow: 2px 2px 8px #FF0000;
  width: 80%;
}

.card-container {
  width: 80%;
  max-width: 600px;
  height: 300px;
  perspective: 1000px;
  text-align: center;
  font-size: 1.5rem;
  color: white;
  animation: slide-down 1s ease-in forwards;
  /* background: rgba(0, 0, 0, 0.2);
  border-radius: 10px; */
}

.card {
  position: relative;
  width: 100%;
  height: 100%;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

.front,
.back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1em;
  border-radius: 10px;
}

.front {
  background-color: #6b0f1a;
  background-image: linear-gradient(315deg, #6b0f1a 0%, #b91372 74%);
}

.back {
  transform: rotateY(180deg);
  background-color: #ff4e00;
  background-image: linear-gradient(315deg, #ff4e00 0%, #ec9f05 74%);  
}

.flip {
  transform: rotateY(-180deg);
}

#new-question-btn {
  font-family: 'Montserrat', sans-serif;
  font-weight: 700;
  padding: 2em;
  border: none;
  border-radius: 10px;
  box-shadow: 0px 0px 10px 6px rgba(0, 0, 0, 0.4);
  outline: none;
  cursor: pointer;
  text-shadow: 2px 2px 8px #FF0000;
  animation: slide-from-right 1s 2s ease-in both;
}

#new-question-btn:hover {
  background-color: rgb(221, 221, 221);
}

#new-question-btn:active {
  box-shadow: 0px 0px 10px 6px rgba(0, 0, 0, 0.8);
}

@keyframes slide-down {
  0% {transform: translateY(-110vh);}
  80% {transform: translateY(20px);}
  100% {transform: translateY(0);}
}

@keyframes slide-from-right {
  0% {transform: translateX(-110vw);}
  80% {transform: translateX(20px);}
  100% {transform: translateX(0);}
}